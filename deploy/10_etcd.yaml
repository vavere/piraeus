apiVersion: v1
kind: Service
metadata:
  name: piraeus-etcd
  namespace: piraeus-system
  labels:
    app.kubernetes.io/name: piraeus
    app.kubernetes.io/component: piraeus-etcd
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  publishNotReadyAddresses: true
  ports:
  - name: client
    port: 2379
    targetPort: 2379
  - name: peer
    port: 2380
    targetPort: 2380
  selector:
    app.kubernetes.io/name: piraeus
    app.kubernetes.io/component: piraeus-etcd
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: piraeus-etcd
  namespace: piraeus-system
  labels:
    app.kubernetes.io/name: piraeus
    app.kubernetes.io/component: piraeus-etcd
spec:
  serviceName: piraeus-etcd
  podManagementPolicy: Parallel
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: piraeus
      app.kubernetes.io/component: piraeus-etcd
  template:
    metadata:
      name: piraeus-etcd
      labels:
        app.kubernetes.io/name: piraeus
        app.kubernetes.io/component: piraeus-etcd
    spec:
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      initContainers:
      - name: init
        image: quay.io/piraeusdatastore/piraeus-init:v0.5.6
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
        env:
        - name: CLUSTER_SIZE
          value: "3"
        - name: PEER_PORT
          value: "2380"
        - name: CLIENT_PORT
          value: "2379"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        args:
        - initEtcd
        volumeMounts:
        - name: timezone
          mountPath: /etc/localtime
        - name: init
          mountPath: /init
        - name: data
          mountPath: /var/lib/etcd
      containers:
      - name: etcd
        image: quay.io/coreos/etcd:v3.4.7
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
        ports:
        - name: client
          containerPort: 2379
        - name: peer
          containerPort: 2380
        command:
        - etcd
        args:
        - --config-file
        - /etc/etcd/etcd.conf
        readinessProbe:
          successThreshold: 3
          failureThreshold: 3
          httpGet:
            path: /health
            port: 2379
          periodSeconds: 5
        lifecycle:
          preStop:
            exec:
              command:
              - prestop
        volumeMounts:
        - name: timezone
          mountPath: /etc/localtime
        - name: init
          mountPath: /etc/etcd
          subPath: etc/etcd
        - name: init
          mountPath: /usr/local/bin/prestop
          subPath: bin/prestop-etcd.sh
        - name: data
          mountPath: /var/lib/etcd
      volumes:
      - name: timezone
        hostPath:
          path: /usr/share/zoneinfo/Etc/UTC
      - name: init
        emptyDir: {}
      - name: data
        hostPath:
          path: /var/lib/piraeus/etcd
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                - piraeus-etcd
            topologyKey: kubernetes.io/hostname
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: piraeus/etcd
                operator: In
                values:
                - "true"
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - key: CriticalAddonsOnly
        operator: Exists
